--SELECT GET_DDL('DATABASE', 'CLEAN_AIR_DB', TRUE);
/*
This file contains DDL to recreate the required Database- and schema-level objects required 
for the pipeline
*/

-- Database 
create or replace database CLEAN_AIR_DB;

-- Schemas 
create or replace schema CLEAN_AIR_DB.PROCESSED;
create or replace schema CLEAN_AIR_DB.ANALYTICS;

create or replace TABLE CLEAN_AIR_DB.ANALYTICS.DIM_COUNTRY (
	COUNTRY_ID NUMBER(38,0) NOT NULL,
	COUNTRY_CODE VARCHAR(16777216),
	COUNTRY_NAME VARCHAR(16777216),
	primary key (COUNTRY_ID)
)COMMENT='Dimension table for openaq countries'
;

create or replace TABLE CLEAN_AIR_DB.ANALYTICS.DIM_LOCATION (
	LOCATION_ID NUMBER(38,0) NOT NULL autoincrement start 1 increment 1 noorder,
	OPENAQ_LOCATION_ID NUMBER(38,0),
	LOCATION_NAME VARCHAR(16777216),
	LOCALITY VARCHAR(16777216),
	LOCATION_LATITUDE FLOAT,
	LOCATION_LONGITUDE FLOAT,
	COUNTRY_CODE VARCHAR(16777216),
	TIMEZONE VARCHAR(16777216),
	INGEST_TS TIMESTAMP_TZ(9),
	primary key (LOCATION_ID)
)COMMENT='Dimension table for openaq locations'
;
create or replace TABLE CLEAN_AIR_DB.ANALYTICS.DIM_PARAMETER (
	PARAMETER_ID NUMBER(38,0) NOT NULL autoincrement start 1 increment 1 noorder,
	OPENAQ_PARAMETER_ID NUMBER(38,0),
	PARAMETER_NAME VARCHAR(16777216),
	PARAMETER_DISPLAY_NAME VARCHAR(16777216),
	PARAMETER_UNIT VARCHAR(16777216),
	INGEST_TS TIMESTAMP_TZ(9),
	primary key (PARAMETER_ID)
)COMMENT='Dimension table for openaq parameters'
;
create or replace TABLE CLEAN_AIR_DB.ANALYTICS.DIM_SENSOR (
	SENSOR_ID NUMBER(38,0) NOT NULL autoincrement start 1 increment 1 noorder,
	OPENAQ_SENSOR_ID NUMBER(38,0),
	SENSOR_NAME VARCHAR(16777216),
	PARAMETER_ID NUMBER(38,0),
	LOCATION_ID NUMBER(38,0),
	INGEST_TS TIMESTAMP_TZ(9),
	primary key (SENSOR_ID)
)COMMENT='Dimension table for openaq sensors'
;
create or replace TABLE CLEAN_AIR_DB.ANALYTICS.DIM_DATE (
	DATE_ID NUMBER(38,0) NOT NULL,
	DATE DATE,
	YEAR NUMBER(38,0),
	QUARTER NUMBER(38,0),
	MONTH NUMBER(38,0),
	DAY NUMBER(38,0),
	primary key (DATE_ID)
)COMMENT='Dimension table for date context'
;
create or replace TABLE CLEAN_AIR_DB.ANALYTICS.DIM_TIME (
	TIME_ID NUMBER(38,0) NOT NULL,
	HOUR NUMBER(38,0),
	MINUTE NUMBER(38,0),
	SECOND NUMBER(38,0),
	primary key (TIME_ID)
)COMMENT='Dimension table for time context'
;
create or replace TABLE CLEAN_AIR_DB.ANALYTICS.FACT_MEASUREMENTS (
	MEASUREMENT_ID NUMBER(38,0) NOT NULL autoincrement start 1 increment 1 noorder,
	DATE_ID NUMBER(38,0),
	TIME_ID NUMBER(38,0),
	LOCATION_ID NUMBER(38,0),
	COUNTRY_ID NUMBER(38,0) DEFAULT 79,
	SENSOR_ID NUMBER(38,0),
	PARAMETER_ID NUMBER(38,0),
	TIMESTAMP_UTC TIMESTAMP_NTZ(9),
	VALUE FLOAT,
	LOAD_TS TIMESTAMP_NTZ(9) DEFAULT CURRENT_TIMESTAMP(),
	primary key (MEASUREMENT_ID)
)COMMENT='Central fact table to meausure air pollution within clean air pipeline model'
;

--File Format for parquet files
CREATE OR REPLACE FILE FORMAT CLEAN_AIR_DB.PROCESSED.PARQUET_FMT
	TYPE = PARQUET
	NULL_IF = ()
;

--Storage integration
--To be filled with S3 and Snowflake data
CREATE OR REPLACE STORAGE INTEGRATION CLEAN_AIR_INT
	TYPE=EXTERNAL_STAGE
	STORAGE_PROVIDER='S3'
	STORAGE_AWS_ROLE_ARN='arn:aws:iam::<value>:role/<value>'
	STORAGE_AWS_EXTERNAL_ID='<value>'
	ENABLED=true
	STORAGE_ALLOWED_LOCATIONS=('<value>');

--Stages
--Cannot be created via DDL
CLEAN_AIR_DB.PROCESSED.DIM_LOCATION_STAGE
CLEAN_AIR_DB.PROCESSED.DIM_PARAMETER_STAGE
CLEAN_AIR_DB.PROCESSED.DIM_SENSOR_STAGE
CLEAN_AIR_DB.PROCESSED.FACT_MEASUREMENTS_STAGE
